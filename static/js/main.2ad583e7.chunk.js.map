{"version":3,"sources":["components/Menu/Menu.jsx","components/pages/Home.jsx","components/FlickGetInfo/FlickGetInfo.jsx","components/FlickrPhotoset/FlickrPhotoset.jsx","components/Gallery/Gallery.jsx","components/pages/Projects.jsx","components/ContactForm/ContactForm.jsx","components/pages/Contact.jsx","components/pages/About.jsx","components/pages/WorkWithMe.jsx","App.js","serviceWorker.js","index.js"],"names":["Menu","props","className","layout","to","defaultProps","Home","FlickGetInfo","popup","useState","photo_id","photoid","popupon","setPopupOn","onClick","ev","preventDefault","src","alt","title","href","window","addEventListener","e","keyCode","dataid","FlickrPhotoset","state","error","isLoaded","photoset_title","user_id","api_key","items","this","photoset_id","url","myheaders","Headers","append","myrequest","Request","mode","cache","fetch","then","res","json","data","setState","photoset","photo","catch","console","log","message","slice","limit","map","item","i","key","id","farm","server","secret","React","Component","Gallery","Projects","ContactForm","name","setName","setMessage","email","setEmail","action","onSubmit","what","method","htmlFor","type","value","onChange","event","target","aria-describedby","rows","Contact","About","icon","faLinkedin","faGithub","faBitbucket","faFlickr","faWhatsapp","faEnvelope","WorkWithMe","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ad583e7.chunk.js","sourcesContent":["import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Menu.scss';\r\n\r\nconst Menu = (props) => (\r\n  <div className={`Menu ${props.layout ? 'Menu--' + props.layout : ''}`}>\r\n    <ul>\r\n      <li><Link to=\"/\">Home</Link></li>\r\n      <li><Link to=\"/Projects\">Projects</Link></li>\r\n      <li><Link to=\"/About\">About</Link></li>\r\n      {/* <li><Link to=\"/WorkWithMe\">Work with Me</Link></li> */}\r\n      <li><Link to=\"/Contact\">Contact</Link></li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nMenu.propTypes = {};\r\n\r\nMenu.defaultProps = {};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <h1>Home</h1>\r\n      <p>This is an ACTIVELY UNDER DEVELOPMENT site.</p>\r\n      <p>If you see something broken please give me chance to fix it...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport './FlickGetInfo.scss';\r\n\r\nconst FlickGetInfo = props => {\r\n  const [photoid, setPhotoid] = useState(props.photo_id);\r\n  const [popupon, setPopupOn] = useState(false);\r\n\r\n  const handleClick = ev => {\r\n    ev.preventDefault();\r\n    setPopupOn(true);\r\n    window.addEventListener('keydown', e => {\r\n      if (e.keyCode === 27) {\r\n        setPopupOn(false);\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleClose = ev => {\r\n    ev.preventDefault();\r\n    setPopupOn(false);\r\n  }\r\n\r\n  let popup;\r\n  if (popupon) {\r\n    popup =\r\n      <div className=\"popup popup--getinfo\">\r\n        <div className=\"popup_content\">\r\n          <button onClick={handleClose} className=\"popup_close\">X</button>\r\n          <img src={props.src} alt={props.title} />\r\n        </div>\r\n      </div>\r\n  } else {\r\n    popup = \"\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"FlickGetInfo\">\r\n      <button\r\n        href=\"#\"\r\n        onClick={handleClick}\r\n        dataid={photoid}\r\n        className=\"item-label\">\r\n        {props.title}\r\n      </button>\r\n      {popup}\r\n    </div>\r\n  )\r\n};\r\n\r\nFlickGetInfo.propTypes = {};\r\n\r\nFlickGetInfo.defaultProps = {};\r\n\r\nexport default FlickGetInfo;\r\n","import React from 'react';\r\nimport './FlickrPhotoset.scss';\r\nimport './../FlickGetInfo/FlickGetInfo';\r\nimport FlickGetInfo from './../FlickGetInfo/FlickGetInfo';\r\n\r\nclass FlickrPhotoset extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      photoset_title: null,\r\n      user_id: null,\r\n      api_key: null,\r\n      items: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const api_key = this.props.api_key;\r\n    const api_url = 'https://api.flickr.com/services/rest';\r\n    const method = 'flickr.photosets.getPhotos';\r\n    const user_id = this.props.user_id;\r\n    const photoset_id = this.props.photoset_id;\r\n    const format = 'json';\r\n    const nojsoncallback = 1;\r\n    let url = `${api_url}?method=${method}&api_key=${api_key}&user_id=${user_id}&photoset_id=${photoset_id}&format=${format}&nojsoncallback=${nojsoncallback}`;\r\n\r\n    let myheaders = new Headers();\r\n    myheaders.append(\"Content-Type\", \"application/json; charset=utf-8\");\r\n    myheaders.append(\"Accept\", \"application/json\");\r\n\r\n    let myrequest = new Request(url, {\r\n      myheaders,\r\n      mode: 'cors',\r\n      cache: 'default',\r\n    });\r\n\r\n    fetch(myrequest)\r\n      .then(res => res.json())\r\n      .then(\r\n        (data) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: data.photoset.photo,\r\n            photoset_title: data.photoset.title\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          })\r\n        }\r\n      )\r\n      .catch(console.log)\r\n  }\r\n  render() {\r\n    const { error, isLoaded, items, photoset_title } = this.state;\r\n    if (error) {\r\n      return <div className=\"FlickrPhotoset\">Error: {error.message}</div>\r\n    } else if (!isLoaded) {\r\n      return <div className=\"FlickrPhotoset\">Loading...</div>\r\n    } else {\r\n      return (\r\n        <div className=\"FlickrPhotoset\">\r\n          <h3>{photoset_title}</h3>\r\n          <ul>\r\n            {items.slice(0, this.props.limit).map((item, i) => (\r\n              <li key={item.id}>\r\n                <FlickGetInfo photo_id={item.id} src={`https://farm${item.farm}.staticflickr.com/${item.server}/${item.id}_${item.secret}.jpg`} title={item.title}></FlickGetInfo>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nFlickrPhotoset.propTypes = {};\r\n\r\nFlickrPhotoset.defaultProps = {};\r\n\r\nexport default FlickrPhotoset;\r\n","import React from 'react';\r\nimport './Gallery.scss';\r\nimport FlickPhotoset from '../FlickrPhotoset/FlickrPhotoset';\r\n\r\nconst Gallery = () => (\r\n  <div className=\"Gallery\">\r\n    <FlickPhotoset api_key=\"ca88703a9cf7d3f3d78b90306a3a80c5\" user_id=\"11413095@N00\" photoset_id=\"72157636629533746\" limit={6}></FlickPhotoset>\r\n    <FlickPhotoset api_key=\"ca88703a9cf7d3f3d78b90306a3a80c5\" user_id=\"11413095@N00\" photoset_id=\"72157623595640529\" limit={6}></FlickPhotoset>\r\n    <FlickPhotoset api_key=\"ca88703a9cf7d3f3d78b90306a3a80c5\" user_id=\"11413095@N00\" photoset_id=\"72157619267683452\" limit={6}></FlickPhotoset>\r\n    <FlickPhotoset api_key=\"ca88703a9cf7d3f3d78b90306a3a80c5\" user_id=\"11413095@N00\" photoset_id=\"72157619267747612\" limit={6}></FlickPhotoset>\r\n    <FlickPhotoset api_key=\"ca88703a9cf7d3f3d78b90306a3a80c5\" user_id=\"11413095@N00\" photoset_id=\"72157658639295708\" limit={6}></FlickPhotoset>\r\n    <FlickPhotoset api_key=\"ca88703a9cf7d3f3d78b90306a3a80c5\" user_id=\"11413095@N00\" photoset_id=\"72157619285112568\" limit={6}></FlickPhotoset>\r\n    <FlickPhotoset api_key=\"ca88703a9cf7d3f3d78b90306a3a80c5\" user_id=\"11413095@N00\" photoset_id=\"72157626117809198\" limit={6}></FlickPhotoset>\r\n  </div>\r\n);\r\n\r\nGallery.propTypes = {};\r\n\r\nGallery.defaultProps = {};\r\n\r\nexport default Gallery;\r\n","import React from 'react';\r\nimport Gallery from './../Gallery/Gallery';\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <div>\r\n      <h1>Projects</h1>\r\n      <Gallery></Gallery>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;","import React, { useState } from 'react';\r\nimport './ContactForm.scss';\r\n\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('name...');\r\n  const [message, setMessage] = useState('message...');\r\n  const [email, setEmail] = useState('email...');\r\n\r\n  const handleSubmit = what => {\r\n    what.preventDefault();\r\n    console.log('what', what);\r\n  };\r\n\r\n  return (\r\n    <form id=\"contact-form\" action=\"http://spideep.com/test_sendmail/index.php\" onSubmit={handleSubmit} method=\"POST\" className=\"ContactForm\">\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={event => setName(event.target.value)}\r\n          className=\"form-control\" />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"exampleInputEmail1\">Email</label>\r\n        <input \r\n          type=\"email\" \r\n          name=\"email\"\r\n          value={email}\r\n          onChange={event => setEmail(event.target.value)} \r\n          className=\"form-control\" \r\n          aria-describedby=\"emailHelp\" />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"message\">Message</label>\r\n        <textarea \r\n          name=\"message\" \r\n          className=\"form-control\"\r\n          value={message}\r\n          onChange={setMessage}\r\n          rows=\"5\">\r\n          </textarea>\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  )\r\n};\r\n\r\n\r\n\r\nContactForm.propTypes = {};\r\n\r\nContactForm.defaultProps = {};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport ContactForm from './../ContactForm/ContactForm';\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div>\r\n      <h1>Contact</h1>\r\n      <p>Leave a message</p>\r\n      <ContactForm></ContactForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons';\r\nimport {\r\n  faGithub,\r\n  faBitbucket,\r\n  faFlickr,\r\n  faLinkedin,\r\n  faWhatsapp\r\n} from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"profile_picture\">\r\n        <img alt=\"Alexis Rengifo\" src=\"https://avatars1.githubusercontent.com/u/1041298?s=460&v=4\" />\r\n      </div>\r\n      <h1>About</h1>\r\n      <p>About page body content</p>\r\n      <div className=\"external_links\">\r\n        <a href=\"https://www.linkedin.com/in/alexisrengifo/\">\r\n          <FontAwesomeIcon icon={faLinkedin} />\r\n        </a>\r\n        <a href=\"https://github.com/spideep\">\r\n          <FontAwesomeIcon icon={faGithub} />\r\n        </a>\r\n        <a href=\"https://bitbucket.org/%7B27f8930f-90b8-4d07-a7aa-3ccea3245b25%7D/\">\r\n          <FontAwesomeIcon icon={faBitbucket} />\r\n        </a>\r\n        <a href=\"https://www.flickr.com/photos/spideep/albums\">\r\n          <FontAwesomeIcon icon={faFlickr} />\r\n        </a>\r\n        <a href=\"https://api.whatsapp.com/send?phone=51960562373&text=Hey%20Alexis,%20lets%20talk\">\r\n          <FontAwesomeIcon icon={faWhatsapp} />\r\n        </a>\r\n      </div>\r\n      <a href=\"mailto:alexisrengifo@gmail.com\">\r\n        <FontAwesomeIcon icon={faEnvelope} /> alexisrengifo@gmail.com\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst WorkWithMe = () => {\r\n  return (\r\n    <div>\r\n      <h1>WorkWithMe</h1>\r\n      <p>WorkWithMe page body content</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkWithMe;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Menu from './components/Menu/Menu';\r\nimport Home from './components/pages/Home';\r\nimport Projects from './components/pages/Projects';\r\nimport Contact from './components/pages/Contact';\r\nimport About from './components/pages/About';\r\nimport WorkWithMe from './components/pages/WorkWithMe';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <div>\r\n          <Menu layout=\"horizontal\" />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/Contact\" component={Contact} />\r\n            <Route path=\"/WorkWithMe\" component={WorkWithMe} />\r\n            <Route path=\"/About\" component={About} />\r\n            <Route path=\"/Projects\" component={Projects} />\r\n            <Route path=\"/Contact\" component={Contact} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}